---
name: docker

on:
  push:
    branches: [master]

jobs:
# TODO(iphydf): Enable once this is working.
#  freebsd:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Build freebsd image
#        run: make -C freebsd build
#      - name: Push images to DockerHub
#        run: docker push toxchat/freebsd:latest

  ##################################################
  #
  # :: Flutter dev base images (better caching)
  #
  ##################################################

  flutter-web:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:flutter/web"
          push: true
          tags: toxchat/flutter-web:latest
          cache-from: type=registry,ref=toxchat/flutter-web:latest
          cache-to: type=inline

  ##################################################
  #
  # :: Bazel docker-sandbox and buildfarm images
  #
  ##################################################

  builder:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:buildfarm/builder"
          push: true
          tags: toxchat/builder:latest
          cache-from: type=registry,ref=toxchat/builder:latest
          cache-to: type=inline

  buildfarm-base:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:buildfarm/base"
          push: true
          tags: toxchat/buildfarm-base:latest
          cache-from: type=registry,ref=toxchat/buildfarm-base:latest
          cache-to: type=inline

  buildfarm-server:
    runs-on: ubuntu-latest
    needs: [buildfarm-base]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:buildfarm/server"
          push: true
          tags: toxchat/buildfarm-server:latest
          cache-from: type=registry,ref=toxchat/buildfarm-server:latest
          cache-to: type=inline

  buildfarm-worker:
    runs-on: ubuntu-latest
    needs: [buildfarm-base, builder]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:buildfarm/worker"
          push: true
          tags: toxchat/buildfarm-worker:latest
          cache-from: type=registry,ref=toxchat/buildfarm-worker:latest
          cache-to: type=inline

  bazel:
    runs-on: ubuntu-latest
    needs: [builder]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:buildfarm/bazel"
          push: true
          tags: toxchat/bazel:latest
          cache-from: type=registry,ref=toxchat/bazel:latest
          cache-to: type=inline

  toolchain:
    runs-on: ubuntu-latest
    needs: [bazel]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate toolchain configs
        run: cd buildfarm/toolchain && ./prepare_toolchain.sh
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "buildfarm/toolchain"
          push: true
          tags: toxchat/toolchain:latest
          cache-from: type=registry,ref=toxchat/toolchain:latest
          cache-to: type=inline

  ##################################################
  #
  # :: Kythe code indexing
  #
  ##################################################

  kythe-release:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:kythe/release"
          push: true
          tags: toxchat/kythe-release:latest
          cache-from: type=registry,ref=toxchat/kythe-release:latest
          cache-to: type=inline

  kythe-webui:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:kythe/webui"
          push: true
          tags: toxchat/kythe-webui:latest
          cache-from: type=registry,ref=toxchat/kythe-webui:latest
          cache-to: type=inline

  kythe-buildenv:
    runs-on: ubuntu-latest
    needs: [bazel, kythe-release]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:kythe/buildenv"
          push: true
          tags: toxchat/kythe-buildenv:latest
          cache-from: type=registry,ref=toxchat/kythe-buildenv:latest
          cache-to: type=inline

  kythe-tables:
    runs-on: ubuntu-latest
    needs: [kythe-buildenv]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:kythe/tables"
          push: true
          tags: toxchat/kythe-tables:latest
          cache-from: type=registry,ref=toxchat/kythe-tables:latest
          cache-to: type=inline

  kythe-serving:
    runs-on: ubuntu-latest
    needs: [kythe-release, kythe-tables, kythe-webui]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:kythe/serving"
          push: true
          tags: toxchat/kythe-serving:latest
          cache-from: type=registry,ref=toxchat/kythe-serving:latest
          cache-to: type=inline

  ##################################################
  #
  # :: GHC for Android
  #
  ##################################################

  ghc-base:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        run: .github/scripts/build-image ghc/base toktoknet/ghc:8.10.7

  ghc-android-aarch64:
    runs-on: ubuntu-latest
    needs: [ghc-base]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        run: .github/scripts/build-image ghc-android/aarch64 toktoknet/ghc-android:8.10.7.aarch64

  ghc-android-arm:
    runs-on: ubuntu-latest
    needs: [ghc-base]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        run: .github/scripts/build-image ghc-android/arm toktoknet/ghc-android:8.10.7.arm

  ghc-android-i686:
    runs-on: ubuntu-latest
    needs: [ghc-base]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        run: .github/scripts/build-image ghc-android/i686 toktoknet/ghc-android:8.10.7.i686

  ghc-android-x86_64:
    runs-on: ubuntu-latest
    needs: [ghc-base]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        run: .github/scripts/build-image ghc-android/x86_64 toktoknet/ghc-android:8.10.7.x86_64
